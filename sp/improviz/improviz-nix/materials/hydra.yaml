name: hydra
vertexShader: |
  #version 330 core
  layout (location = 0) in vec3 position;
  layout(location = 1) in vec2 texcoord;
  layout (location = 2) in vec3 barycentric;

  uniform mat4 Pmatrix;
  uniform mat4 Vmatrix;
  uniform mat4 Mmatrix;

  out vec3 vPosition;
  out vec2 Texcoord;
  out float vTime;
  out vec4 vColor;

  void main(void) {
    Texcoord = texcoord;
    gl_Position = ((Pmatrix * Vmatrix) * Mmatrix) * vec4(position, 1.);
    vPosition = position;
  }
fragmentShader: |
  #version 330 core
  precision mediump float;

  in vec2 Texcoord;
  in vec3 vPosition;

  uniform vec4 Color;
  uniform float Time;
  uniform float Freq;

  out vec4 finalColor;

  vec4 osc(vec2 st, float freq) {
    float v = sin((st.x + Time) * freq) * 0.5 + 0.5;
    return vec4(v, v, v, 1.0);
  }

  void main(void) {
    finalColor = Color * osc(Texcoord.xy, Freq);
  }
