% ls, list
# Dirs then files in reverse order by modified date
ls -lrt
# Directories last (tac works like cat just reversed)
ls -l | tac

% symbolic links
# Create a symbolic link. <file> <symlink>
ln -s 

% tr, translate
# Delete characters, do not translate
tr -d '\n' 

% gzip, tar, extract
# Extract things without a hassle
atool -x 
# Create tar gzipped archive. <archived file> <files>
tar -cvzf 

% tail
# Output appended data as the file grows
tail -f 

% pgrep
# match processes whose names exactly match the pattern
pgrep -x 

% tabular, tab, csv
# Select first column of tabular data
cut -f1

% shell
# List installed shells
chsh -l
# Change default shell for a user
chsh -s full-path-to-shell

% fonts
# List available fonts on the system
fc-list | fzf

% pacman, arch package manager
# List installed packages and versions
pacman -Q | fzf
# List packages with extensive info
pacman -Qi | less
# List only installed packages from sync dbs (without aur (and others) packages):
pacman -Qn | fzf
# Search locally-installed packages for matching strings
pacman -Qs 
# Only explicitly installed packages
pacman -Qe | less
# List package files
pacman -Ql 
# Synchronize databases and update packages
sudo pacman -Syyu
# Remove orphaned packages
sudo pacman -Rns $(pacman -Qtdq)

% music, mpd, mpc
# Show info about the currently playing song
mpc status
# Play next song
mpc next
# Play previous song
mpc prev
# Toggle play/pause
mpc toggle

% youtube
# Download video ignoring errors and resuming
youtube-dl -ic
# Download audio only ignoring errors and resuming
youtube-dl -icx

% sort
# Specify different temp dir
sort -T 

% diff
# Show line not present in other file
comm -13 <(sort ../quickmarks) <(sort quickmarks\~20200826-013605)

% pass, password
# Show password tree
pass
# New password
pass insert archlinux.org/wiki/username
# Generate new random passwork for provided website, where n is desire length
pass generate archlinux.org/wiki/username n
# Select password using dmenu and copy it to clipboard for 45 sec
passmenu
# Edit password
pass edit /path/to/data

% audio, music
# Check duration of an audio file
ffmpeg -i file 2>%1 | grep Duration

% unix, operators
# separate commands on same line
;
# group commands on same line
( )
# Wildcard match of exactly one character in a filename
?
# Wildcard match of any one character enclosed in these brackets in a filename
[ ]
# add user to the group
gpasswd -a user group
# create new group
groupadd group
# check which users belong to group
groups user
# Change group
sudo chown -R user:group dir
# Execute command as different user
sudo -u user command

% docker
# run docker commands without sudo
sudo groupadd docker; sudo usermod -aG docker $USER
# Attach to container
docker exec -it container_name bash

% bioinformatics
# Compress vcf file
bgzip -c file.vcf > file.vcf.gz; tabix -p vcf file.vcf.gz
# Sort vcf file
cat file.vcf | awk '$1 ~ /^#/ {print $0;next} {print $0 | "sort -k1,1 -k2,2n"}' > file_sorted.vcf
# remove 'chr' chromosome names in vcf
awk '{gsub(/^chr/,""); print}' file.vcf > file_nochr.vcf
# add 'chr' chromosome names in vcf
awk '{if($0 !~ /^#/) print "chr"$0; else print $0}' file_nochr.vcf > file.vcf
# Using vcfanno example
./vcfanno_linux64 -p 10 -lua custom.lua gnomad.conf file_nochr.vcf > annotated_file_nochr.vcf

% network, ip
# local IP address
hostname -i

% slurm
# Create interactive slurm session
srun -J "my_job" -n 1 --pty bash -i

% hard drive, storage 
# List all storage devices in a tree-like format
lsblk
# parition and mount disk
mkfs.ext4 /dev/sdz100; sudo mount /dev/sdbz100 /mnt/dir

% operating system
# arch installation into usb
dd bs=4M if=path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync

% find
# Get directories basenames
find . -maxdepth 1 -type d | cut -c 3-

% ssh vpn
# Connect to computer with ssh through vpn
sudo openfortivpn vpn.url:443 --username name -p password
# Copy from remote to local
scp user@ip:/remote/adress local/adress

% usb
# completely wipe out usb drive
sudo shred /dev/sdc1
# completely wipe out usb drive
sudo dd if=/dev/zero of=/dev/sdc1 status=progress

% R
# Execute commands sequentially on one line
command1; command 2; ...
# Uninstall packages
remove.packages(pkgs)

% git
# Clone specific branch
git clone -b <branch> <remote_repo>
# Reset all changes to HEAD
git reset --hard

% mongo
# Export to file
mongoexport --collection=col --db=db --out=file.json
# Import files to database
mongoimport --db test --collection inventory --file inventory.json

% nvim
# Profiling startuptime
nvim --startuptime log
