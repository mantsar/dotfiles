global !p

def cycle_index():
	i = vim.current.window.cursor[0] - 1
	regex = f'^\s*d([0-9]+)\s*\$.*'
	while i > 0:
		m = re.match(regex, snip.buffer[i])
		if m:
			return int(m.group(1))
		i -= 1
	return 1

endglobal

# Patterns

snippet ppar "" w
stack [${VISUAL}$1]
endsnippet

# JIT like

snippet j "Sound pattern" b
d${1:`!p if not snip.c: snip.rv = cycle_index() + 1`} $$2 s "${VISUAL}$3"
endsnippet

snippet js "Silence a pattern" b
d${1:`!p if not snip.c: snip.rv = cycle_index()`} silence
endsnippet

snippet j1 "Silence all except this" b
solo ${1:`!p if not snip.c: snip.rv = cycle_index()`}
endsnippet

snippet ju "Undo solo action" b
unsolo ${1:`!p if not snip.c: snip.rv = cycle_index()`}
endsnippet

# Patterns

snippet pstu "stut :: Pattern Integer -> Pattern Double -> Pattern Rational -> ControlPattern -> ControlPattern" w
stut ${1:2} ${2:0.5} ${3:0.1} $ ${VISUAL}$0
endsnippet

# Language

snippet do "Block" b
do
	${VISUAL}$0
endsnippet

snippet v "Assign variable in scoped environment" b
let $1 = ${VISUAL}$0
endsnippet

# Samples/buffers
snippet bck "" w
clubkick:{$1:0}
endsnippet

snippet bdk "" w
drumtraks:{$1:6}
endsnippet

snippet bkl "" w
kicklinn:{$1:3}
endsnippet
